name: Build & Publish Docker Image

on:
    workflow_dispatch:
    push:
        branches:
            - main
    release:
        types: [published]
    schedule:
        # triggers at 00:00 UTC every 3 days (days 3,6,9,â€¦)
        - cron: "0 0 */3 * *"

jobs:
    check_update:
        name: Check for new AriaNg release
        runs-on: ubuntu-latest
        outputs:
            should_publish: ${{ steps.compare.outputs.should_publish }}
            new_tag: ${{ steps.releases.outputs.target }}
        steps:
            - name: Install tools
              run: sudo apt-get update && sudo apt-get install -y jq curl

            - name: Fetch tags
              id: releases
              run: |
                  THIS="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest"
                  TARGET="https://api.github.com/repos/mayswind/AriaNg/releases/latest"
                  echo "current=$(curl -s $THIS | jq -r '.tag_name')" >> $GITHUB_OUTPUT
                  echo "target=$(curl -s $TARGET | jq -r '.tag_name')" >> $GITHUB_OUTPUT

            - name: Compare tags
              id: compare
              run: |
                  if [ "${{ steps.releases.outputs.current }}" != "${{ steps.releases.outputs.target }}" ]; then
                    echo "should_publish=true" >> $GITHUB_OUTPUT
                  else
                    echo "should_publish=false" >> $GITHUB_OUTPUT
                  fi

    publish:
        name: Build & Push Image
        needs: check_update
        # only fire if we saw a new tag
        if: needs.check_update.outputs.should_publish == 'true'
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: ${{ github.event.repository.name }}
            PLATFORMS: linux/amd64,linux/arm64,linux/arm64,linux/arm/v7
            TAG: ${{ needs.check_update.outputs.new_tag }}
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Docker Hub metadata
              id: meta_hub
              uses: docker/metadata-action@v5
              with:
                  images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=semver,pattern=${{ env.TAG }}
                      type=semver,pattern={{major}}.{{minor}}

            - name: Build & push to Docker Hub
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: ${{ env.PLATFORMS }}
                  push: true
                  tags: ${{ steps.meta_hub.outputs.tags }}
                  labels: ${{ steps.meta_hub.outputs.labels }}
                  build-args: |
                      ARIANG_VERSION=${{ env.TAG }}

            - name: Update Docker Hub description
              uses: peter-evans/dockerhub-description@v4
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
                  repository: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}

            - name: Log in to GitHub Packages
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: GitHub Packages metadata
              id: meta_ghcr
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=semver,pattern=${{ env.TAG }}
                      type=semver,pattern={{major}}.{{minor}}

            - name: Build & push to GitHub Packages
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: ${{ env.PLATFORMS }}
                  push: true
                  tags: ${{ steps.meta_ghcr.outputs.tags }}
                  labels: ${{ steps.meta_ghcr.outputs.labels }}
                  build-args: |
                      ARIANG_VERSION=${{ env.TAG }}
